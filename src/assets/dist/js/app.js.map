{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app.js","src/assets/js/app.js","src/assets/js/modules/box.js","src/assets/js/modules/collada.js","src/assets/js/modules/monkey.js","src/assets/js/modules/sphere.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","./modules/box","./modules/collada","./modules/monkey","./modules/sphere","2","document","getElementById","initScene","renderer","setSize","setClearColor","appendChild","domElement","scene","add","light","camera","THREE","PerspectiveCamera","position","z","box","Mesh","BoxGeometry","MeshBasicMaterial","color","wireframe","name","render","rotation","y","x","requestAnimationFrame","Scene","window","WebGLRenderingContext","WebGLRenderer","antialias","CanvasRenderer","AmbientLight","$","ready","3","width","height","set","loader","ColladaLoader","options","convertUpAxis","load","collada","monster","onload","4","JSONLoader","geometry","materials","material","monkey","5","SphereGeometry","sphere","stats","Stats","setMode","style","left","top","body","update"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nrequire('./modules/box');\n\nrequire('./modules/sphere');\n\nrequire('./modules/monkey');\n\nrequire('./modules/collada');\n\n},{\"./modules/box\":2,\"./modules/collada\":3,\"./modules/monkey\":4,\"./modules/sphere\":5}],2:[function(require,module,exports){\n\"use strict\";\n\n/* Render a cube\r\n **************************/\nif (document.getElementById(\"webgl-container\")) {\n    var box = function () {\n\n        var scene = new THREE.Scene(),\n            renderer = window.WebGLRenderingContext ? new THREE.WebGLRenderer({\n            antialias: true\n        }) : new THREE.CanvasRenderer(),\n            light = new THREE.AmbientLight(0xffffff),\n            camera = void 0,\n            box = void 0;\n\n        function initScene() {\n            renderer.setSize(700, 400);\n            renderer.setClearColor(0xFFC857, 1);\n            document.getElementById(\"webgl-container\").appendChild(renderer.domElement);\n\n            scene.add(light);\n            camera = new THREE.PerspectiveCamera(35, /* camera vertical field of view (FOV) */\n            700 / 400, /* aspect ratio */\n            1, /* Near */\n            1000 /* Far */\n            );\n\n            camera.position.z = 100; /* camera zoom */\n            scene.add(camera);\n\n            box = new THREE.Mesh(new THREE.BoxGeometry(20, 20, 20), new THREE.MeshBasicMaterial({\n                color: 0xC5283D,\n                wireframe: true\n            }));\n\n            box.name = \"box\";\n            scene.add(box);\n            render();\n        }\n\n        function render() {\n            box.rotation.y += 0.01;\n            box.rotation.x += 0.01;\n\n            renderer.render(scene, camera);\n            requestAnimationFrame(render);\n        }\n\n        if (document.getElementById(\"webgl-container\")) {\n            $(document).ready(initScene());\n        }\n\n        return {\n            scene: scene // expose the scene property\n        };\n    }();\n}\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nif (document.getElementById(\"webgl-collada\")) {\n            var colladaExample = function () {\n\n                        \"use strict\";\n\n                        var scene = new THREE.Scene(),\n                            renderer = new THREE.WebGLRenderer({\n                                    antialias: true\n                        }),\n                            light = new THREE.AmbientLight(0xffffff),\n                            camera,\n                            monster,\n                            skin;\n\n                        function initScene() {\n\n                                    var width = 800,\n                                        height = 500;\n\n                                    renderer.setSize(width, height);\n                                    renderer.setClearColor(0x7180AC, 1);\n                                    document.getElementById(\"webgl-collada\").appendChild(renderer.domElement);\n\n                                    scene.add(light);\n\n                                    camera = new THREE.PerspectiveCamera(35, width / height, 1, 1000);\n\n                                    camera.position.set(0, 0, 3);\n\n                                    scene.add(camera);\n\n                                    var loader = new THREE.ColladaLoader();\n                                    loader.options.convertUpAxis = true;\n\n                                    //note monster model is from three.js examples\n                                    loader.load('assets/js/models/pistol.dae', function (collada) {\n                                                monster = collada.scene;\n                                                scene.add(monster);\n\n                                                render();\n                                    });\n                        };\n\n                        function render() {\n\n                                    monster.rotation.y += 0.001;\n\n                                    renderer.render(scene, camera);\n                                    requestAnimationFrame(render);\n                        };\n\n                        window.onload = initScene;\n\n                        return {\n                                    scene: scene\n                        };\n            }();\n}\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nif (document.getElementById(\"webgl-monkey\")) {\n            var monkey = function () {\n\n                        var scene = new THREE.Scene(),\n                            renderer = new THREE.WebGLRenderer(),\n                            light = new THREE.AmbientLight(0xffffff),\n                            camera = void 0,\n                            monkey = void 0;\n\n                        function initScene() {\n                                    var width = 700,\n                                        height = 400;\n\n                                    renderer.setSize(width, height);\n                                    renderer.setClearColor(0x7180AC, 1);\n                                    document.getElementById(\"webgl-monkey\").appendChild(renderer.domElement);\n\n                                    scene.add(light);\n\n                                    camera = new THREE.PerspectiveCamera(35, width / height, 1, 1000);\n\n                                    camera.position.set(0, 0, 5);\n\n                                    scene.add(camera);\n\n                                    var loader = new THREE.JSONLoader();\n\n                                    loader.load(\"assets/js/models/monkey.js\", function (geometry, materials) {\n\n                                                var material = new THREE.MeshBasicMaterial({\n                                                            color: 0xFFFFFF,\n                                                            wireframe: true\n                                                });\n\n                                                monkey = new THREE.Mesh(geometry, material);\n\n                                                scene.add(monkey);\n                                                render();\n                                    });\n                        };\n\n                        function render() {\n\n                                    monkey.rotation.y += 0.02;\n\n                                    renderer.render(scene, camera);\n                                    requestAnimationFrame(render);\n                        };\n\n                        window.onload = initScene;\n\n                        return {\n                                    scene: scene\n                        };\n            }();\n}\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\n/* Render a sphere\r\n **************************/\nif (document.getElementById(\"webgl-sphere\")) {\n            var sphere = function () {\n\n                        var scene = new THREE.Scene(),\n                            renderer = window.WebGLRenderingContext ? new THREE.WebGLRenderer({\n                                    antialias: true\n                        }) : new THREE.CanvasRenderer(),\n                            light = new THREE.AmbientLight(0xffffff),\n                            camera = void 0,\n                            sphere = void 0,\n                            stats = void 0;\n\n                        function initScene() {\n                                    renderer.setSize(700, 300);\n                                    renderer.setClearColor(0xFFC857, 1);\n                                    document.getElementById(\"webgl-sphere\").appendChild(renderer.domElement);\n\n                                    scene.add(light);\n                                    camera = new THREE.PerspectiveCamera(35, /* camera vertical field of view (FOV) */\n                                    700 / 400, /* aspect ratio */\n                                    1, /* Near */\n                                    1000 /* Far */\n                                    );\n\n                                    camera.position.z = 100; /* camera zoom */\n                                    scene.add(camera);\n\n                                    var geometry = new THREE.SphereGeometry(20, 25, 25);\n                                    var material = new THREE.MeshBasicMaterial({\n                                                color: 0xC5283D,\n                                                wireframe: true\n                                    });\n                                    sphere = new THREE.Mesh(geometry, material);\n                                    sphere.position.x = 10;\n                                    scene.add(sphere);\n\n                                    scene.add(sphere);\n\n                                    // Generate the stats\n                                    stats = new Stats();\n                                    stats.setMode(0);\n\n                                    stats.domElement.style.position = 'absolute';\n                                    stats.domElement.style.left = '0px';\n                                    stats.domElement.style.top = '0px';\n                                    document.body.appendChild(stats.domElement);\n\n                                    render();\n                        }\n\n                        function render() {\n                                    sphere.rotation.y += 0.01;\n                                    // sphere.rotation.x += 0.01;\n\n                                    renderer.render(scene, camera);\n                                    requestAnimationFrame(render);\n                                    stats.update();\n                        }\n\n                        $(document).ready(initScene());\n\n                        return {\n                                    scene: scene // expose the scene property\n                        };\n            }();\n}\n\n},{}]},{},[1])\n\n","/* Import modules\r\n **************************/\r\nimport './modules/box';\r\nimport './modules/sphere';\r\nimport './modules/monkey';\r\nimport './modules/collada';\r\n","/* Render a cube\r\n **************************/\r\nif (document.getElementById(\"webgl-container\")) {\r\n    let box = (() => {\r\n\r\n        let scene = new THREE.Scene(),\r\n            renderer = window.WebGLRenderingContext ? new THREE.WebGLRenderer({\r\n                antialias: true\r\n            }) : new THREE.CanvasRenderer(),\r\n            light = new THREE.AmbientLight(0xffffff),\r\n            camera,\r\n            box;\r\n\r\n        function initScene() {\r\n            renderer.setSize(700, 400);\r\n            renderer.setClearColor(0xFFC857, 1);\r\n            document.getElementById(\"webgl-container\").appendChild(renderer.domElement);\r\n\r\n            scene.add(light);\r\n            camera = new THREE.PerspectiveCamera(\r\n                35, /* camera vertical field of view (FOV) */\r\n                700 / 400, /* aspect ratio */\r\n                1, /* Near */\r\n                1000 /* Far */\r\n            );\r\n\r\n            camera.position.z = 100; /* camera zoom */\r\n            scene.add(camera);\r\n\r\n            box = new THREE.Mesh(\r\n                new THREE.BoxGeometry(20, 20, 20),\r\n                new THREE.MeshBasicMaterial({\r\n                    color: 0xC5283D,\r\n                    wireframe: true\r\n                })\r\n            );\r\n\r\n            box.name = \"box\";\r\n            scene.add(box);\r\n            render();\r\n\r\n        }\r\n\r\n        function render() {\r\n            box.rotation.y += 0.01;\r\n            box.rotation.x += 0.01;\r\n\r\n            renderer.render(scene, camera);\r\n            requestAnimationFrame(render);\r\n        }\r\n\r\n        if (document.getElementById(\"webgl-container\")) {\r\n            $(document).ready(initScene());\r\n        }\r\n\r\n\r\n        return {\r\n            scene: scene // expose the scene property\r\n        };\r\n    })();\r\n}\r\n","if (document.getElementById(\"webgl-collada\")) {\r\n    let colladaExample = (function() {\r\n\r\n        \"use strict\";\r\n\r\n        var scene = new THREE.Scene(),\r\n            renderer = new THREE.WebGLRenderer({\r\n                antialias: true\r\n            }),\r\n            light = new THREE.AmbientLight(0xffffff),\r\n            camera,\r\n            monster,\r\n            skin;\r\n\r\n        function initScene() {\r\n\r\n            let width = 800,\r\n                height = 500;\r\n\r\n            renderer.setSize(width, height);\r\n            renderer.setClearColor(0x7180AC, 1);\r\n            document.getElementById(\"webgl-collada\").appendChild(renderer.domElement);\r\n\r\n            scene.add(light);\r\n\r\n            camera = new THREE.PerspectiveCamera(\r\n                35,\r\n                width / height,\r\n                1,\r\n                1000\r\n            );\r\n\r\n            camera.position.set(0, 0, 3);\r\n\r\n            scene.add(camera);\r\n\r\n            let loader = new THREE.ColladaLoader();\r\n            loader.options.convertUpAxis = true;\r\n\r\n            //note monster model is from three.js examples\r\n            loader.load('assets/js/models/pistol.dae', function(collada) {\r\n                monster = collada.scene;\r\n                scene.add(monster);\r\n\r\n                render();\r\n            });\r\n\r\n        };\r\n\r\n        function render() {\r\n\r\n            monster.rotation.y += 0.001;\r\n\r\n            renderer.render(scene, camera);\r\n            requestAnimationFrame(render);\r\n        };\r\n\r\n        window.onload = initScene;\r\n\r\n        return {\r\n            scene: scene\r\n        }\r\n\r\n    })();\r\n}\r\n","if (document.getElementById(\"webgl-monkey\")) {\r\n    let monkey = (function() {\r\n\r\n        let scene = new THREE.Scene(),\r\n            renderer = new THREE.WebGLRenderer(),\r\n            light = new THREE.AmbientLight(0xffffff),\r\n            camera,\r\n            monkey;\r\n\r\n        function initScene() {\r\n            let width = 700,\r\n                height = 400;\r\n\r\n            renderer.setSize(width, height);\r\n            renderer.setClearColor(0x7180AC, 1);\r\n            document.getElementById(\"webgl-monkey\").appendChild(renderer.domElement);\r\n\r\n            scene.add(light);\r\n\r\n            camera = new THREE.PerspectiveCamera(\r\n                35,\r\n                width / height,\r\n                1,\r\n                1000\r\n            );\r\n\r\n            camera.position.set(0, 0, 5);\r\n\r\n            scene.add(camera);\r\n\r\n            let loader = new THREE.JSONLoader();\r\n\r\n            loader.load(\"assets/js/models/monkey.js\", function(geometry, materials) {\r\n\r\n                let material = new THREE.MeshBasicMaterial({\r\n                    color: 0xFFFFFF,\r\n                    wireframe: true\r\n                });\r\n\r\n                monkey = new THREE.Mesh(geometry, material);\r\n\r\n                scene.add(monkey);\r\n                render();\r\n\r\n            });\r\n\r\n        };\r\n\r\n        function render() {\r\n\r\n            monkey.rotation.y += 0.02;\r\n\r\n            renderer.render(scene, camera);\r\n            requestAnimationFrame(render);\r\n        };\r\n\r\n        window.onload = initScene;\r\n\r\n        return {\r\n            scene: scene\r\n        }\r\n\r\n    })();\r\n}\r\n","/* Render a sphere\r\n **************************/\r\nif (document.getElementById(\"webgl-sphere\")) {\r\n    let sphere = (() => {\r\n\r\n        let scene = new THREE.Scene(),\r\n            renderer = window.WebGLRenderingContext ? new THREE.WebGLRenderer({\r\n                antialias: true\r\n            }) : new THREE.CanvasRenderer(),\r\n            light = new THREE.AmbientLight(0xffffff),\r\n            camera,\r\n            sphere,\r\n            stats;\r\n\r\n        function initScene() {\r\n            renderer.setSize(700, 300);\r\n            renderer.setClearColor(0xFFC857, 1);\r\n            document.getElementById(\"webgl-sphere\").appendChild(renderer.domElement);\r\n\r\n            scene.add(light);\r\n            camera = new THREE.PerspectiveCamera(\r\n                35, /* camera vertical field of view (FOV) */\r\n                700 / 400, /* aspect ratio */\r\n                1, /* Near */\r\n                1000 /* Far */\r\n            );\r\n\r\n            camera.position.z = 100; /* camera zoom */\r\n            scene.add(camera);\r\n\r\n            let geometry = new THREE.SphereGeometry(20, 25, 25);\r\n            let material = new THREE.MeshBasicMaterial({\r\n                color: 0xC5283D,\r\n                wireframe: true\r\n            });\r\n            sphere = new THREE.Mesh(geometry, material);\r\n            sphere.position.x = 10;\r\n            scene.add(sphere);\r\n\r\n            scene.add(sphere);\r\n\r\n            // Generate the stats\r\n            stats = new Stats();\r\n            stats.setMode(0);\r\n\r\n            stats.domElement.style.position = 'absolute';\r\n            stats.domElement.style.left = '0px';\r\n            stats.domElement.style.top = '0px';\r\n            document.body.appendChild(stats.domElement);\r\n\r\n            render();\r\n\r\n        }\r\n\r\n        function render() {\r\n            sphere.rotation.y += 0.01;\r\n            // sphere.rotation.x += 0.01;\r\n\r\n            renderer.render(scene, camera);\r\n            requestAnimationFrame(render);\r\n            stats.update();\r\n        }\r\n\r\n        $(document).ready(initScene());\r\n\r\n\r\n        return {\r\n            scene: scene // expose the scene property\r\n        };\r\n    })();\r\n}\r\n"]}